openapi: 3.0.0
info:
  title: medical.equipment JWT Authentication with Refresh Tokens
  version: 1.0.0

servers:
  - url: ${AUTHENTICATION_EXPRESS_ENDPOINT} 
    description: Development server

paths:
  /api/authentication/login:
    $ref: "../../controllers/handlers/login/index.yaml"

  /api/authentication/logout:
    $ref: "../../controllers/handlers/logout/index.yaml"
  
  /api/authentication/refresh-token:
    $ref: "../../controllers/handlers/refreshToken/index.yaml"
  
  /api/authentication/revoke-token:
    $ref: "../../controllers/handlers/revokeToken/index.yaml"

  /api/authentication/invite-signup:
    $ref: "../../controllers/handlers/inviteSignup/index.yaml"
  
  /api/authentication/check-signup-invitation/{token}:
    $ref: "../../controllers/handlers/checkSignupInvitation/index.yaml"
  
  /api/authentication/signup:
    $ref: "../../controllers/handlers/signup/index.yaml"

  /api/authentication/forgot-password:
    $ref: "../../controllers/handlers/forgotPassword/index.yaml"

  /api/authentication/reset-password:
    $ref: "../../controllers/handlers/resetPassword/index.yaml"

  /api/authentication/revoke-access/{userId}:
    $ref: "../../controllers/handlers/revokeAccess/index.yaml"
  
  /api/authentication/undo-revoke-access/{userId}:
    $ref: "../../controllers/handlers/undoRevokeAccess/index.yaml"

  /api/authentication/fetch-users:
    $ref: "../../controllers/handlers/fetchUsers/index.yaml"

  /api/authentication/fetch-user/{userId}:
    $ref: "../../controllers/handlers/fetchUser/index.yaml"

  /api/authentication/update-user/{userId}:
    $ref: "../../controllers/handlers/updateUser/index.yaml"

  /api/authentication/remove-user/{userId}:
    $ref: "../../controllers/handlers/removeUser/index.yaml"
  
  /api/authentication/change-password/{userId}:
    $ref: "../../controllers/handlers/changePassword/index.yaml"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  responses:
    JWTRefreshTokenCookie:
      description: JWT token, JWT token expiration date, refresh token
      headers:
        Set-Cookie:
          description: "refreshToken"
          schema:
            type: string
            example: refreshToken=e1e43d4e-8351-4e96-8831-f1d3914e9066; Domain=127.0.0.1; Path=/; Expires=Tue, 11 Aug 2020 11:22:37 GMT; HttpOnly
      content:
        application/json:
          schema:
            type: object
            properties:
              jwtToken:
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwczovL21lZGljYWwuZXF1aXBtZW50L2p3dC9jbGFpbXMiOnsieC1oYXN1cmEtYWxsb3dlZC1yb2xlcyI6WyJVc2VyIiwiQWRtaW4iXSwieC1oYXN1cmEtZGVmYXVsdC1yb2xlIjoiVXNlciIsIngtaGFzdXJhLXVzZXItaWQiOiIxIn0sImlhdCI6MTU5NDU1Mjk1OCwiZXhwIjoxNTk0NTUzODU4fQ.mEMgsbfXnVVd0dQc-Oo16SG78ZhWTTkqmLBAYwrQhY8
              jwtTokenExpiry:
                type: string
                example: 2020-07-12T11:37:38.070Z
              refreshToken:
                type: object
                properties:
                  token:
                    type: string
                    example: e1e43d4e-8351-4e96-8831-f1d3914e9066
                  expiresAt:
                    type: string
                    example: 2020-08-11T11:22:38.070Z
  
  schemas:
    InvalidToken:
      type: object
      properties:
        type: 
          type: string
          example: "Unauthorized"
        message:
          type: string
          example: "Invalid token"
    Unauthorized:
      type: object
      properties:
        type: 
          type: string
          example: "Unauthorized"
        message:
          type: string
          example: "Unauthorized"
    AccessRevoked:
      type: object
      properties:
        type: 
          type: string
          example: "Unauthorized"
        message:
          type: string
          example: "Access revoked"
    InvalidEmailOrPassword:
      type: object
      properties:
        type: 
          type: string
          example: "Unauthorized"
        message:
          type: string
          example: "Invalid email or password"
    InvalidEmailOrFirstName:
      type: object
      properties:
        type: 
          type: string
          example: "Validation error"
        message:
          type: object
          properties:
            email:
              type: string
              example: "Email is required"
            firstName:
              type: string
              example: "First name is required"
    AccountExistsForEmail:
      type: object
      properties:
        type: 
          type: string
          example: "Bad request"
        message:
          type: string
          example: "Account already exists for this email"
    TokenAlreadyRevoked:
      type: object
      properties:
        type: 
          type: string
          example: "Bad request"
        message:
          type: string
          example: "Token already revoked"
    InvalidRefreshToken:
      type: object
      properties:
        type: 
          type: string
          example: "Validation error"
        message:
          type: object
          properties:
            token:
              type: string
              example: "Token is not valid"
    InvalidSignUpInvitation:
      type: object
      properties:
        type: 
          type: string
          example: "Bad request"
        message:
          type: string
          example: "Invalid sign up invitation"
    InvalidSignUp:
      type: object
      properties:
        type: 
          type: string
          example: "Validation error"
        message:
          type: object
          properties:
            firstName:
              type: string
              example: "First name is required"
            lastName:
              type: string
              example: "Last name is required"
            email:
              type: string
              example: "Email is required"
            password:
              type: string
              example: "Password is required"
            confirmPassword:
              type: string
              example: "Confirm password is required"
            token:
              type: string
              example: "Token is required"
    NoAccountForEmail:
      type: object
      properties:
        type: 
          type: string
          example: "Bad request"
        message:
          type: string
          example: "No account for this email"
    NoAccountForId:
      type: object
      properties:
        type: 
          type: string
          example: "Bad request"
        message:
          type: string
          example: "No account for this id"
    InvalidEmail:
      type: object
      properties:
        type: 
          type: string
          example: "Validation error"
        message:
          type: object
          properties:
            email:
              type: string
              example: "Email is required"
    InvalidResetPassword:
      type: object
      properties:
        type: 
          type: string
          example: "Validation error"
        message:
          type: object
          properties:
            password:
              type: string
              example: "Password is required"
            confirmPassword:
              type: string
              example: "Confirm password is required"
            token:
              type: string
              example: "Token is required"
    ResetLinkAlreadyUsed:
      type: object
      properties:
        type: 
          type: string
          example: "Bad request"
        message:
          type: string
          example: "Reset link already used"
    ExpiredResetLink:
      type: object
      properties:
        type: 
          type: string
          example: "Bad request"
        message:
          type: string
          example: "Expired reset link"
    InvalidUserId:
      type: object
      properties:
        type: 
          type: string
          example: "Validation error"
        message:
          type: object
          properties:
            userId:
              type: string
              example: "User id is required"
    CannotRevokeOwnAccess:
      type: object
      properties:
        type: 
          type: string
          example: "Unauthorized"
        message:
          type: string
          example: "You cannot revoke your own access"
    AccessAlreadyRevoked:
      type: object
      properties:
        type: 
          type: string
          example: "Bad request"
        message:
          type: string
          example: "Access already revoked for this account"
    CannotRemoveOwnAccount:
      type: object
      properties:
        type: 
          type: string
          example: "Unauthorized"
        message:
          type: string
          example: "You cannot remove your own account"
    CannotUndoRevokeAccessOwnAccount:
      type: object
      properties:
        type: 
          type: string
          example: "Unauthorized"
        message:
          type: string
          example: "You cannot undo revoke access your own account"
    CannotUpdateAccessOwnAccount:
      type: object
      properties:
        type: 
          type: string
          example: "Unauthorized"
        message:
          type: string
          example: "You cannot update your own access"
    CannotUpdateOwnRole:
      type: object
      properties:
        type: 
          type: string
          example: "Unauthorized"
        message:
          type: string
          example: "You cannot update your own role"
    AccessNotRevoked:
      type: object
      properties:
        type: 
          type: string
          example: "Bad request"
        message:
          type: string
          example: "Access is not revoked for this account"
    EntityParseFailed:
      type: object
      properties:
        type: 
          type: string
          example: "Bad request"
        message:
          type: string
          example: "Entity parse failed"
    InvalidUpdateUser:
      type: object
      properties:
        type: 
          type: string
          example: "Validation error"
        message:
          type: object
          properties:
            firstName:
              type: string
            lastName:
              type: string
            role[0]:
              type: "Role must be one of Admin,User"
            role[1]:
              type: "Role must be one of Admin,User"
            isBlocked:
              type: string
          
