openapi: 3.0.0
info:
  title: JWT Authentication with Refresh Tokens
  version: 1.0.0

servers:
  - url: ${AUTHENTICATION_EXPRESS_ENDPOINT} 
    description: Development server

paths:
  /api/authentication/login:
    post:
      summary: Authenticate users with email and password
      description: Authenticate users with email and password and return the JWT and refresh token
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "catalin@medical.equipment"
                password:
                  type: string
                  example: "MyOwnIsland1999"
              required:
                - email
                - password
      responses:
        "200":
          $ref: "#/components/responses/JWTRefreshTokenCookie"
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  type: 
                    type: string
                    example: "Validation error"
                  message:
                    type: object
                    properties:
                      email:
                        type: string
                        example: "Email is required"
                      password:
                        type: string
                        example: "Password is required"                
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/InvalidEmailOrPassword'
                  - $ref: '#/components/schemas/AccessRevoked'

  /api/authentication/logout:
    get:
      summary: Log out authenticated users
      description: Log out authenticated users by deleting the refreshToken cookie
      operationId: logout
      responses:
        "200":
          description: Logged out
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "Logged out"
  
  /api/authentication/refresh-token:
    post:
      summary: Refresh JWT using a valid refresh token
      description: Refresh JWT using a valid refreshToken in a http only cookie
      operationId: refresh-token
      parameters:
        - in: cookie
          name: refreshToken
          required: true
          description: Refresh token can be sent in a cookie
          schema:
            type: string
            example: e1e43d4e-8351-4e96-8831-f1d3914e9066
      responses:
        "200":
          $ref: "#/components/responses/JWTRefreshTokenCookie"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Unauthorized"
                  - $ref: "#/components/schemas/AccessRevoked"
  
  /api/authentication/revoke-token:
    post:
      summary: Revoke a refresh token
      description: Revoke a refresh token as owner user or admin
      operationId: revoke-token
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token: 
                  type: string
                  format: uuid
                  example: "e1e43d4e-8351-4e96-8831-f1d3914e9066"
              required:
                - token
      responses:
        "200":
          description: Token revoked
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "Token revoked"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/TokenAlreadyRevoked"
                  - $ref: "#/components/schemas/InvalidRefreshToken"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unauthorized"

  /api/authentication/invite-signup:
    post:
      summary: Invite an user with a valid email account to sign up
      description: Invite an user with a valid email account to sign up for a new account 
      operationId: invite-signup
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email: 
                  type: string
                  format: email
                  example: "simona@medical.equipment"
                firstName:
                  type: string
                  example: "Simona"
              required:
                - email
                - firstName
      responses:
        "200":
          description: Invitation to signup sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "Invitation to signup sent"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/InvalidEmailOrFirstName"
                  - $ref: "#/components/schemas/AccountExistsForEmail"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/InvalidToken"
                  - $ref: "#/components/schemas/Unauthorized"
                  - $ref: "#/components/schemas/AccessRevoked"
  
  /api/authentication/check-signup-invitation/:token:
    get:
      summary: Check if sign up invitation token is valid
      description: Check if sign up invitation token is valid to allow sign up 
      operationId: check-signup-invitation
      parameters:
        - in: path
          name: token
          description: Invitation token
          required: true
          example: "e1e43d4e-8351-4e96-8831-f1d3914e9066"
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Valid sign up invitation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "Valid sign up invitation"
                  payload:
                    type: object
                    properties:
                      email:
                        type: string
                        format: email
                        example: "simona@medical.equipment"
                      token:
                        type: string
                        format: uuid
                        example: "e1e43d4e-8351-4e96-8831-f1d3914e9066"
                      name:
                        type: string
                        example: "Simona"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/InvalidRefreshToken"
                  - $ref: "#/components/schemas/AccountExistsForEmail"
                  - $ref: "#/components/schemas/InvalidSignUpInvitation"
  
  /api/authentication/signup:
    post:
      summary: Sign up for a new account
      description: Sign up for a new account using a valid invitation  
      operationId: signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName: 
                  type: string
                  example: "Simona"
                lastName:
                  type: string
                  example: "Galushka"
                email:
                  type: string
                  format: email
                  example: "simona@medical.equipment"
                password:
                  type: string
                  example: "MyOwnIsland1999"
                confirmPassword:
                  type: string
                  example: "MyOwnIsland1999"
                token:
                  type: string
                  format: uuid
                  example: "e1e43d4e-8351-4e96-8831-f1d3914e9066"
              required:
                - firstName
                - lastName
                - email
                - password
                - confirmPassword
                - token
      responses:
        "200":
          $ref: "#/components/responses/JWTRefreshTokenCookie"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/InvalidSignUpInvitation"
                  - $ref: "#/components/schemas/InvalidSignUp"

  /api/authentication/forgot-password:
    post:
      summary: Generate email message to reset password
      description: Generate email message containing the URL to reset password
      operationId: forgot-password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "simona@medical.equipment"
              required:
                - email
      responses:
        "200":
          description: Reset email message sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "Reset email message sent"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/NoAccountForEmail"
                  - $ref: "#/components/schemas/InvalidEmail"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessRevoked"

  /api/authentication/reset-password:
    post:
      summary: Reset password
      description: Reset password using a valid reset password token
      operationId: reset-password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: "MyOwnIsland1999"
                confirmPassword:
                  type: string
                  example: "MyOwnIsland1999"
                token:
                  type: string
                  format: uuid
                  example: "e1e43d4e-8351-4e96-8831-f1d3914e9066"
              required:
                - password
                - confirmPassword
                - token
      responses:
        "200":
          $ref: "#/components/responses/JWTRefreshTokenCookie"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/InvalidResetPassword"
                  - $ref: "#/components/schemas/ResetLinkAlreadyUsed"
                  - $ref: "#/components/schemas/ExpiredResetLink"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/InvalidToken"
                  - $ref: "#/components/schemas/AccessRevoked"

  /api/authentication/revoke-access/:userId:
    get:
      summary: Revoke user's access
      description: Revoke user's access as a logged in admin
      operationId: revoke-access
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          description: User id
          required: true
          example: "123"
          schema:
            type: integer
      responses:
        "200":
          description: Access revoked
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "Access revoked"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/NoAccountForId"
                  - $ref: "#/components/schemas/InvalidUserId"
                  - $ref: "#/components/schemas/CannotRevokeOwnAccess"
                  - $ref: "#/components/schemas/AccessAlreadyRevoked"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/InvalidToken"
                  - $ref: "#/components/schemas/Unauthorized"
                  - $ref: "#/components/schemas/AccessRevoked"

  /api/authentication/remove-user/:userId:
    delete:
      summary: Remove user
      description: Remove user as a logged in admin
      operationId: remove-user
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          description: User id
          required: true
          example: "123"
          schema:
            type: integer
      responses:
        "200":
          description: User removed
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: "User removed"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/NoAccountForId"
                  - $ref: "#/components/schemas/InvalidUserId"
                  - $ref: "#/components/schemas/CannotRemoveOwnAccount"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/InvalidToken"
                  - $ref: "#/components/schemas/Unauthorized"
                  - $ref: "#/components/schemas/AccessRevoked"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  responses:
    JWTRefreshTokenCookie:
      description: JWT token, JWT token expiration date, refresh token
      headers:
        Set-Cookie:
          description: "refreshToken"
          schema:
            type: string
            example: refreshToken=e1e43d4e-8351-4e96-8831-f1d3914e9066; Domain=127.0.0.1; Path=/; Expires=Tue, 11 Aug 2020 11:22:37 GMT; HttpOnly
      content:
        application/json:
          schema:
            type: object
            properties:
              jwtToken:
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwczovL21lZGljYWwuZXF1aXBtZW50L2p3dC9jbGFpbXMiOnsieC1oYXN1cmEtYWxsb3dlZC1yb2xlcyI6WyJVc2VyIiwiQWRtaW4iXSwieC1oYXN1cmEtZGVmYXVsdC1yb2xlIjoiVXNlciIsIngtaGFzdXJhLXVzZXItaWQiOiIxIn0sImlhdCI6MTU5NDU1Mjk1OCwiZXhwIjoxNTk0NTUzODU4fQ.mEMgsbfXnVVd0dQc-Oo16SG78ZhWTTkqmLBAYwrQhY8
              jwtTokenExpiry:
                type: string
                example: 2020-07-12T11:37:38.070Z
              refreshToken:
                type: object
                properties:
                  token:
                    type: string
                    example: e1e43d4e-8351-4e96-8831-f1d3914e9066
                  expiresAt:
                    type: string
                    example: 2020-08-11T11:22:38.070Z
  
  schemas:
    InvalidToken:
      type: object
      properties:
        type: 
          type: string
          example: "Unauthorized"
        message:
          type: string
          example: "Invalid token"
    Unauthorized:
      type: object
      properties:
        type: 
          type: string
          example: "Unauthorized"
        message:
          type: string
          example: "Unauthorized"
    AccessRevoked:
      type: object
      properties:
        type: 
          type: string
          example: "Unauthorized"
        message:
          type: string
          example: "Access revoked"
    InvalidEmailOrPassword:
      type: object
      properties:
        type: 
          type: string
          example: "Unauthorized"
        message:
          type: string
          example: "Invalid email or password"
    InvalidEmailOrFirstName:
      type: object
      properties:
        type: 
          type: string
          example: "Validation error"
        message:
          type: object
          properties:
            email:
              type: string
              example: "Email is required"
            firstName:
              type: string
              example: "First name is required"
    AccountExistsForEmail:
      type: object
      properties:
        type: 
          type: string
          example: "Bad request"
        message:
          type: string
          example: "Account already exists for this email"
    TokenAlreadyRevoked:
      type: object
      properties:
        type: 
          type: string
          example: "Bad request"
        message:
          type: string
          example: "Token already revoked"
    InvalidRefreshToken:
      type: object
      properties:
        type: 
          type: string
          example: "Validation error"
        message:
          type: object
          properties:
            token:
              type: string
              example: "Token is not valid"
    InvalidSignUpInvitation:
      type: object
      properties:
        type: 
          type: string
          example: "Bad request"
        message:
          type: string
          example: "Invalid sign up invitation"
    InvalidSignUp:
      type: object
      properties:
        type: 
          type: string
          example: "Validation error"
        message:
          type: object
          properties:
            firstName:
              type: string
              example: "First name is required"
            lastName:
              type: string
              example: "Last name is required"
            email:
              type: string
              example: "Email is required"
            password:
              type: string
              example: "Password is required"
            confirmPassword:
              type: string
              example: "Confirm password is required"
            token:
              type: string
              example: "Token is required"
    NoAccountForEmail:
      type: object
      properties:
        type: 
          type: string
          example: "Bad request"
        message:
          type: string
          example: "No account for this email"
    NoAccountForId:
      type: object
      properties:
        type: 
          type: string
          example: "Bad request"
        message:
          type: string
          example: "No account for this id"
    InvalidEmail:
      type: object
      properties:
        type: 
          type: string
          example: "Validation error"
        message:
          type: object
          properties:
            email:
              type: string
              example: "Email is required"
    InvalidResetPassword:
      type: object
      properties:
        type: 
          type: string
          example: "Validation error"
        message:
          type: object
          properties:
            password:
              type: string
              example: "Password is required"
            confirmPassword:
              type: string
              example: "Confirm password is required"
            token:
              type: string
              example: "Token is required"
    ResetLinkAlreadyUsed:
      type: object
      properties:
        type: 
          type: string
          example: "Bad request"
        message:
          type: string
          example: "Reset link already used"
    ExpiredResetLink:
      type: object
      properties:
        type: 
          type: string
          example: "Bad request"
        message:
          type: string
          example: "Expired reset link"
    InvalidUserId:
      type: object
      properties:
        type: 
          type: string
          example: "Validation error"
        message:
          type: object
          properties:
            userId:
              type: string
              example: "User id is required"
    CannotRevokeOwnAccess:
      type: object
      properties:
        type: 
          type: string
          example: "Bad request"
        message:
          type: string
          example: "You cannot revoke your own access"
    AccessAlreadyRevoked:
      type: object
      properties:
        type: 
          type: string
          example: "Bad request"
        message:
          type: string
          example: "Access already revoked for this account"
    CannotRemoveOwnAccount:
      type: object
      properties:
        type: 
          type: string
          example: "Bad request"
        message:
          type: string
          example: "You cannot remove your own account"
          